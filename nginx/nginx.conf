worker_processes  1;

events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;
    access_log off;
    sendfile        on;
    keepalive_timeout  65;

	map $http_upgrade $connection_upgrade {
		default upgrade;
		''      close;
	}

    server {
        listen       80;
        server_name  localhost;
	    client_max_body_size 10m;
	    error_page   500 502 503 504  /50x.html;
		
		location / {
			#proxy_pass  http://nuxt:4001;
			#proxy_set_header Host $http_host;
            #proxy_set_header X-Real-IP $remote_addr;
            #proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            #proxy_set_header X-Forwarded-Proto $scheme;
            #proxy_http_version 1.1;
            #proxy_set_header Connection $http_connection;
            #proxy_set_header Upgrade $http_upgrade;
            #proxy_set_header Sec-WebSocket-Extensions $http_sec_websocket_extensions;
            #proxy_set_header Sec-WebSocket-Key $http_sec_websocket_key;
            #proxy_set_header Sec-WebSocket-Version $http_sec_websocket_version;
            #proxy_cache_bypass $http_upgrade;
            #proxy_read_timeout 900;
            #client_max_body_size 0;
            #proxy_buffering off;
            #add_header X-Accel-Buffering no;
		}
		
		location /api {
			try_files $uri $uri/ @octane;
			location /api/files {
				proxy_pass http://tusd:1080;	
        		proxy_request_buffering  off;
        		proxy_buffering          off;
        		proxy_http_version       1.1;
        		proxy_set_header X-Forwarded-Host $host:8080;
        		proxy_set_header X-Forwarded-Proto $scheme;
        		proxy_set_header         Upgrade $http_upgrade;
        		proxy_set_header         Connection "upgrade";
        		client_max_body_size     0;
			}
		}
		
		location /index.php {
			try_files /not_exists @octane;
		}
		
		location @octane {
			set $suffix "";	 
			if ($uri = /index.php) {
				set $suffix ?$query_string;
			}
			proxy_http_version 1.1;
			proxy_set_header Host $http_host;
			proxy_set_header Scheme $scheme;
			proxy_set_header SERVER_PORT $server_port;
			proxy_set_header REMOTE_ADDR $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection $connection_upgrade;
			proxy_pass http://php:4002$suffix;
		}

		location ~ ^/(assets|uploads|media|thumbnails)/ {
			root /backend/public;
			add_header Access-Control-Allow-Origin *;
			if ($request_method = OPTIONS) {
			    add_header Content-Length 0;
			    add_header Content-Type text/plain;
			    add_header "Access-Control-Allow-Origin" *;	
			    add_header "Access-Control-Allow-Methods" "GET, POST, OPTIONS, HEAD";
			    add_header "Access-Control-Allow-Headers" "Authorization, Origin, X-Requested-With, Content-Type, Accept";
			    return 200;
			}
		}

		location ~* \.io {
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header Host $http_host;
			proxy_set_header X-NginX-Proxy false;
			proxy_pass http://echo:6001;
			proxy_redirect off;
			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection "upgrade";
		}

        location = /50x.html {
            root   html;
        }

		location /internal {
		    allow 172.16.0.0/12;
			allow 127.0.0.1;
			deny all;
			location /internal/control {
				rtmp_control all;
			}
			location /internal/stat {
				rtmp_stat all;
				rtmp_stat_stylesheet stat.xsl;
			}
		}
			
        location /live {
			add_header Access-Control-Allow-Origin *;
			add_header Cache-Control no-cache;
			expires -1;
            alias /backend/public/live;
			proxy_cache_bypass 1;
			location ~\.m3u8$ {
                deny all;
                return 404;
            }
			types {
				video/mp2t ts;
			}
		}

        vod_mode mapped;
        vod_upstream_location /videos-upstream;
        vod_cache_buffer_size 1m;
        vod_metadata_cache metadata_cache 512m;
      	#vod_response_cache response_cache 128m;
      	#vod_mapping_cache mapping_cache 5m;

        location ~ ^/videos-hls {
        	vod hls;
        	add_header Access-Control-Allow-Headers '*';
        	add_header Access-Control-Expose-Headers 'Server,range,Content-Length,Content-Range';
        	add_header Access-Control-Allow-Methods 'GET, HEAD, OPTIONS';
        	add_header Access-Control-Allow-Origin '*';
        	expires 100d;
        }

       	location /videos-upstream {
        	internal;
        	proxy_pass http://php:4002/api/internal/videos-upstream;
       	}

    }
} 

rtmp {
	server {
		listen 1935;
		chunk_size 4096;
		application live {
			live on;
			hls on;
			hls_fragment_naming system;
			hls_path /backend/public/live;
			hls_nested on;
			hls_fragment 8s;
			hls_playlist_length 32s;
			on_publish http://php:4002/api/internal/stream/on-publish;
			on_publish_done http://php:4002/api/internal/stream/on-publish-done;

			recorder main {
				record all manual;
				record_path /backend/storage/temp-recordings;
				record_suffix -%d.mp4;
				record_unique on;
				exec_record_done curl http://php:4002/api/internal/stream/on-record-done?filename=$filename;
			}
		}
	}
}
